# -*- coding: utf-8 -*-
"""titanic_dataModel_zubaer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g85FqJoo3sFRy9OnD_g-EtMZcyFGBDGv

# **Logistics Regression model for Titanic dataset:**
"""

import os
os.getcwd()
# uploaded data file in the directory provided

# Load the dataset
import pandas as pd
titanic = pd.read_csv('titanic.csv')

# Checking the data
print(titanic.head())
print(titanic.info())

# Split into features and target variable
X = titanic.drop('survived', axis=1)
y = titanic['survived']

# Encode categorical variables using OneHotEncoder
from sklearn.preprocessing import OneHotEncoder
# Access the underlying NumPy array using .values before reshaping
gender_encoded = OneHotEncoder().fit(X['sex'].values.reshape(-1, 1))
X_encoded = gender_encoded.transform(X['sex'].values.reshape(-1, 1)) # Reshape here as well for consistency

# Build the logistic regression model and train it
from sklearn.linear_model import LogisticRegression
model = LogisticRegression(max_iter=1000)
model.fit(X_encoded, y)

# Make predictions on the test set (if available; in this example, we assume X_test is already preprocessed)
y_pred = model.predict(X_encoded)  # Returns probabilities

# Evaluate the model (confusion matrix and classification report)
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
cm = confusion_matrix(y, y_pred)
print("Confusion Matrix:")
print(cm)
print("\nClassification Report:")
print(classification_report(y, y_pred))

# Calculate accuracy
accuracy = accuracy_score(y, y_pred)
print(f"Accuracy: {accuracy}")